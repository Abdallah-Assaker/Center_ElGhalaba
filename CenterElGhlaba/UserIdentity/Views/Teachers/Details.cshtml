@using Microsoft.AspNetCore.Identity
@using Center_ElGhalaba.Constants
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ApplicationUser user = await UserManager.GetUserAsync(User);
}


@using Center_ElGhalaba.Models
@model Center_ElGhalaba.Models.Teacher

@{
    ViewData["Title"] = "Details";
    Layout = "_IndexLayout";
}

<!-- Courses area start -->



<section class="mt-5">
    <div class="container-fluid h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-10">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row gradient-custom-2" style="height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column ">
                            @if (Model.AppUser.Image != null)
                            {
                                <img class="avatar rounded-circle" alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(Model.AppUser.Image))" />
                            }
                            else
                            {
                                <img src="https://i.imgur.com/stD0Q19.jpg"
                                     alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2"
                                     style="width: 150px; z-index: 1">
                            }
                            
                            @if (await UserManager.IsInRoleAsync(user, RolesConsts.Teacher.ToString()) && user.Id == Model.AppUserID)
                            {
                                <a class="btn hero-btn" asp-area="Identity" asp-page="/Account/Manage/Index">Edit profile</a>
                            }
                            else
                            {
                                <div id="data">not teacher</div>
                                <script>
                                    window.onload = function () {
                                        Folow('@user.Id.ToString()', '@Model.AppUserID.ToString()')
                                    }
                                </script>

                            }
                            
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5>Your Name: @Model.AppUser.FirstName @Model.AppUser.LastName</h5>
                            <p>Your Email: @Model.AppUser.Email</p>
                        </div>
                    </div>

                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        <div class="d-flex justify-content-end text-center py-1">
                            <div>
                                <p class="mb-1 h5">@Model.Balance</p>
                                <p class="small text-muted mb-0">Balance</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">@Model.Likes</p>
                                <p class="small text-muted mb-0">Likes</p>
                            </div>
                            <div>
                                <p class="mb-1 h5">@Model.Follows.Count</p>
                                <p class="small text-muted mb-0">Followers</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4 text-black">
                        <div class="mb-5">
                            <p class="lead fw-normal mb-1">About</p>
                            <div class="p-4" style="background-color: #f8f9fa;">
                                <p class="font-italic mb-1">Your Adress: @Model.AppUser.Address</p>
                                <p class="font-italic mb-1">Your PhoneNumber: @Model.AppUser.PhoneNumber</p>
                                <p class="font-italic mb-1">Your Birthdate: @Model.AppUser.Birthdate</p>
                            </div>
                        </div>

                        <div class="courses-area fix">
                            <div class="container">
                                <div class="row justify-content-center">
                                    <div class="col-xl-7 col-lg-8">
                                        <div class="section-tittle text-center mb-55">
                                            <h2>Your Lessons</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="courses-actives">
                                    <!-- Single -->
                                    
                                    @if (Model.Lessons.Count > 0)
                                    {

                                        @foreach (Lesson lesson in Model.Lessons)
                                        {


                                            <div class="properties pb-20">
                                                <div class="properties__card">
                                                    <div class="properties__img overlay1">
                                                        <a href="#"><img src="https://i.imgur.com/stD0Q19.jpg" alt=""></a>
                                                    </div>

                                                    <div class="properties__caption">
                                                        <h3 class="card-title">Title : @lesson.Title </h3>
                                                        <p class="card-title">PublishDate: @lesson.PublishDate</p>
                                                        <p class="card-title">Likes: @lesson.Likes</p>
                                                        <p class="card-text">@lesson.Description</p>
                                                        <p class="card-text">Views: @lesson.Views</p>
                                                        <p class="card-text">Discount: @lesson.Discount</p>
                                                        <a asp-action="EditCourse" class="text-info">Edit </a> |
                                                        <a asp-action="RemoveCourse" class="text-danger">Remove </a>

                                                        <div class="properties__footer d-flex justify-content-between align-items-center">
                                                            <div class="price py-2">
                                                                <span>Price: @lesson.Price EG</span>
                                                            </div>
                                                        </div>

                                                        @if ( !await UserManager.IsInRoleAsync(user, RolesConsts.Teacher.ToString()) && user.Id == Model.AppUserID)
                                                        {
                                                            <a href="#" class="border-btn border-btn2">Find out more category</a>
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div>You Dont Have Any Courses Yet Do You Want To <a asp-action="AddCourse" asp-route-id="@Model.ID" style="color:#FF9F67">Create One</a></div>
                                    }
                                    <!-- Single -->
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



@section Scripts{

    <script>
        function Add(s, t) {
            $.ajax({
                url: '/Teachers/AddFollower',
                data: { studentId: s, teacherId: t },
                success: function (result) {
                    console.log(result);
                    //$('#courseList').html(result);
                },
                error: function (xhr, status) {
                    alert("Add error " + status);
                }
            });
        };
        function Remove(s, t) {
            $.ajax({
                url: '/Teachers/RemoveFollower',
                data: { studentId: s, teacherId: t },
                success: function (result) {
                    console.log(result);
                    //$('#courseList').html(result);
                },
                error: function (xhr, status) {
                    alert("Remove error " + status);
                }
            });
        };
        function Folow(s, t) {
            $.ajax({
                url: '/Teachers/IsFolowwing',
                data: { studentId: s, teacherId: t },
                success: function (result) {
                    if (result) {
                        alert("Following");
                        $("#data").html("<a class='btn' onclick=Remove('" + s + "','" + t + "')>UnFollow</a>")
                    }
                    else {
                        alert("Notfollowing");
                        $("#data").html("<a class='btn' onclick=Add('" + s + "','" + t + "')>Follow</a>")
                    }

                    //$('#courseList').html(result);
                },
                error: function (xhr, status) {

                    alert("Follow error " + status);
                }
            });
        };

    </script>



    @*@{
        if (await UserManager.IsInRoleAsync(user, RolesConsts.Teacher.ToString()) && user.Id == Model.AppUserID)
        {
            <a class="btn" asp-area="Identity" asp-page="/Account/Manage/Index">Edit profile</a>
        }
    }
    @{
        else
        {
            <script>
                window.onload = function () {
                    if (Folow('@user.Id.ToString()', '@Model.AppUserID.ToString()')) {
                        alert("Following");
                        //<a class="btn" asp - area="Identity" asp - page="/Account/Manage/Index" > Edit profile < /a>
                    }
                    else {
                        alert("Notfollowing");
                        //<a class="btn" asp - area="Identity" asp - page="/Account/Manage/Index" > Edit profile < /a>
                    }
                }
            </script>
        }
    }*@

    @if (await UserManager.IsInRoleAsync(user, RolesConsts.Teacher.ToString()) && user.Id == Model.AppUserID)
    {
    }
    else
    {
        @*<script src="~/js/test.js"></script>*@
    }
}
